
server.port=8085
spring.application.name = etutorAprioriExtension
spring.datasource.url=jdbc:postgresql://localhost:5432/etutorplusplus
spring.datasource.username=apriori
spring.datasource.password=apriori


#minutes for administration task
minutes.admin : 10
#minutes for solving a training task
minutes.training : 100
#minutes for solving an exercise
minutes.exercise : 100

#maximum number of trainees
max.trainee : 15
#maximum number of exercises
max.exercises : 4
#maximum number of admins
max.admins : 3

#difficulty levels extension
difficulty.level.easy : easy
difficulty.level.moderate : moderate
difficulty.level.hard : hard
difficulty.level.very_hard : very_hard

#difficulty levels eTutor++
difficulty.level.et.easy : Easy
difficulty.level.et.moderate : Medium
difficulty.level.et.hard : Hard
difficulty.level.et.very_hard : Very hard

difficulty.level.et.ad.easy : taskManagement.difficulties.easy
difficulty.level.et.ad.moderate : taskManagement.difficulties.medium
difficulty.level.et.ad.hard : taskManagement.difficulties.hard
difficulty.level.et.ad.very_hard : taskManagement.difficulties.veryHard

#configuration difficulty levels
#easy
difficulty.level.easy.numberOfTransactions : 2
difficulty.level.easy.numberOfAvailableItems : 2
difficulty.level.easy.maxItems : 2
difficulty.level.easy.minItems : 2
difficulty.level.easy.minSupport : 2
difficulty.level.easy.noRules : 4
difficulty.level.easy.askedRules : 4
difficulty.level.easy.minConfidence : 100
difficulty.level.easy.feedbackLevel : 4
difficulty.level.easy.typeDataset : ABC
#moderate
difficulty.level.moderate.numberOfTransactions : 4
difficulty.level.moderate.numberOfAvailableItems : 4
difficulty.level.moderate.maxItems : 4
difficulty.level.moderate.minItems : 2
difficulty.level.moderate.minSupport : 2
difficulty.level.moderate.noRules : 4
difficulty.level.moderate.askedRules : 4
difficulty.level.moderate.minConfidence : 100
difficulty.level.moderate.feedbackLevel : 3
difficulty.level.moderate.typeDataset : ABC
#hard
difficulty.level.hard.numberOfTransactions : 6
difficulty.level.hard.numberOfAvailableItems : 6
difficulty.level.hard.maxItems : 6
difficulty.level.hard.minItems : 2
difficulty.level.hard.minSupport : 4
difficulty.level.hard.noRules : 4
difficulty.level.hard.askedRules : 4
difficulty.level.hard.minConfidence : 80
difficulty.level.hard.feedbackLevel : 2
difficulty.level.hard.typeDataset : RandomLetters
#veryHard
difficulty.level.very_hard.numberOfTransactions : 8
difficulty.level.very_hard.numberOfAvailableItems : 8
difficulty.level.very_hard.maxItems : 8
difficulty.level.very_hard.minItems : 4
difficulty.level.very_hard.minSupport : 4
difficulty.level.very_hard.noRules : 4
difficulty.level.very_hard.askedRules : 4
difficulty.level.very_hard.minConfidence : 80
difficulty.level.very_hard.feedbackLevel : 1
difficulty.level.very_hard.typeDataset : BASKETA

#achievable points in training task
exercise.eval.training.scalingFactor : 100

#restrictions dataset setup
#number of transactions in dataset
#not smaller than 2
exercise.numberOfTransactions : 10

#number of available items
#Maximum depends on the number of unique items in the starting set and not smaller than 2
exercise.numberOfAvailableItems : 10

#maximum number of items in transaction
#not greater than excercise.numberOfAvailableItems and not smaller than 2
exercise.maxItems : 10

#minimum number of items in transaction
#not smaller than 2 and not greater than excercise.maxItems
exercise.minItems : 10

#minimum support count for apriori algorithm
#not smaller than 2 and not grater than excercise.numberOfTransactions
exercise.minSupport : 10

#number of element to derive rules from
#not smaller than 2 and not greater than excercise.maxItems
exercise.noRules : 10

#number of asked derived rules
#not greater than noRules 
exercise.askedRules : 6

#minimum confidence for deriving rules
#in percent, not smaller than 0 and not greater than 100
exercise.minConfidence : 100


#points for correct interim items 
eval.interimresult.items : 0.75
#points for correct interim support
eval.interimresult.support : 0.25
#penalty incorrect interim row (row counted as correct, if items are ok (excluding support count))
eval.penalty.interimresult.row.incorrect : -1
#penalty forgotten interim row (row is counted as forgotten, if items are not present (excluding support count))
eval.penalty.interimresult.row.forgotten : -1

#points for frequent pattern correct items 
eval.frequentpattern.items : 0.75
#points for frequent pattern correct support
eval.frequentpattern.support : 0.25
#penalty frequent pattern incorrect row (row counted as correct, if items are ok (excluding support count))
eval.penalty.frequentpattern.row.incorrect : -1
#penalty frequent pattern forgotten row (row is counted as forgotten, if items are not present (excluding support count))
eval.penalty.frequentpattern.row.forgotten : -1


#points for correct rule
eval.rule : 0.8
#points for correct formula confidence
eval.confidence : 0.1
#points for correct fractions
eval.formula : 0.1
#penalty for incorrect rule (if rule is incorrect, the formula and number part is ignored)
eval.penalty.rule.incorrect : -1
#penalty for forgotten rule
eval.penalty.rule.forgotten : -1

#semantic sparql
semantic.link : http://localhost:3030/
semantic.query.endpoint : etutorpp-database/
semantic.update.endpoint : etutorpp-database/update

#link to eTutor++
etutorplusplus.link : http://localhost:9000
#password for decryption 
etutorplusplus.extension.key : 0535627058893800
